name: CI/CD con SonarCloud y Deploy a GitHub Pages

on:
  push:
    branches:
      - master  # Cambios en master disparan el flujo

jobs:
  build_and_analyze:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout del repo
      uses: actions/checkout@v3

    # Configura tu entorno de desarrollo (si es necesario para el anÃ¡lisis)
    # Ejemplo para Node.js: 
    # - name: Set up Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18.x'

    # Instala las dependencias (si es necesario para el anÃ¡lisis)
    # Ejemplo para npm:
    # - name: Install Dependencies
    #   run: npm install

    - name: Verificar secretos
      run: |
        echo "âœ… Verificando los secretos..."
        if [ -z "${{ secrets.SONAR_PROJECT_KEY }}" ]; then
          echo "ðŸš¨ SONAR_PROJECT_KEY no estÃ¡ definido"
        else
          echo "âœ… SONAR_PROJECT_KEY estÃ¡ definido"
        fi

        if [ -z "${{ secrets.SONAR_ORG }}" ]; then
          echo "ðŸš¨ SONAR_ORG no estÃ¡ definido"
        else
          echo "âœ… SONAR_ORG estÃ¡ definido"
        fi

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v2.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io  # URL de SonarCloud
        SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}  # Definido en los secretos de GitHub
        SONAR_ORGANIZATION: ${{ secrets.SONAR_ORG }}  # Definido en los secretos de GitHub

  deploy:
    needs: build_and_analyze  # Espera a que el anÃ¡lisis de SonarCloud termine
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repo
        uses: actions/checkout@v3

      - name: Configurar Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Actions"

      - name: Crear carpeta temporal gh-pages
        run: mkdir gh-pages

      - name: Copiar archivos a gh-pages
        run: cp index.html styles.css gh-pages/

      - name: Inicializar Git y preparar rama gh-pages
        run: |
          cd gh-pages
          git init
          git checkout -b gh-pages
          git add .
          git commit -m "Deploy automÃ¡tico - ${{ github.sha }}"

      # ðŸ‘‡ Verifica que el token estÃ© presente
      - name: Verificar que el GH_TOKEN estÃ¡ presente
        run: |
          if [ -z "${{ secrets.GH_TOKEN }}" ]; then
            echo "ðŸš¨ GH_TOKEN estÃ¡ mal definido"
            exit 1
          else
            echo "âœ… GH_TOKEN estÃ¡ correctamente !!"
          fi

      - name: Push a gh-pages
        run: |
          cd gh-pages
          git remote add origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
          git push -f origin gh-pages
